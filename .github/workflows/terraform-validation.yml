name: Terraform Validation

on:
  pull_request:
    branches: [main]
    paths:
      - 'infrastructure/**'
      - '.github/workflows/terraform-validation.yml'

permissions:
  contents: read
  pull-requests: write
  id-token: write

jobs:
  terraform-validate:
    name: Terraform Validation
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ~1.0

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Terraform Format Check
        id: fmt
        run: |
          cd infrastructure
          terraform fmt -check -recursive
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: |
          cd infrastructure
          terraform init -backend=false

      - name: Terraform Validate
        id: validate
        run: |
          cd infrastructure
          terraform validate

      - name: Terraform Plan - Staging
        id: plan-staging
        run: |
          cd infrastructure
          terraform init -backend-config="resource_group_name=observer-tfstate-rg" \
                         -backend-config="storage_account_name=observertfstate" \
                         -backend-config="container_name=tfstate" \
                         -backend-config="key=staging.terraform.tfstate"
          terraform plan -var-file="environments/staging.tfvars" -no-color
        continue-on-error: true

      - name: Comment PR
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        env:
          PLAN_STAGING: "${{ steps.plan-staging.outputs.stdout }}"
        with:
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            #### Terraform Plan - Staging üìñ\`${{ steps.plan-staging.outcome }}\`

            <details><summary>Show Plan - Staging</summary>

            \`\`\`terraform
            ${process.env.PLAN_STAGING}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });